name: Release

on:
  push:
    branches:
      - "master"
    paths:
      - "CHANGELOG.md"
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    env:
      output: "${{ github.workspace }}/build/app/outputs/apk/release"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download OpenList Source Code
        run: |
          cd $GITHUB_WORKSPACE/openlist-lib/scripts
          chmod +x *.sh
          ./init_openlist.sh
          ./init_web.sh

      - uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache-dependency-path: ${{ github.workspace }}/openlist-lib/openlist/go.sum

      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - uses: nttld/setup-ndk@v1
        id: setup-ndk
        with:
          ndk-version: r25c

      - name: Setup Gradle
        uses: gradle/gradle-build-action@v3

      - name: Build OpenList
        run: |
            cd $GITHUB_WORKSPACE/openlist-lib/scripts
            chmod +x *.sh
            ./init_gomobile.sh
            ./gobind.sh
        env:
          ANDROID_NDK_HOME: ${{ steps.setup-ndk.outputs.ndk-path }}

      - name: Upload AAR
        uses: actions/upload-artifact@v4
        with:
          name: "OpenList"
          path: "${{ github.workspace }}/android/app/libs/*.aar"

      - name: Init Signature
        run: |
          touch local.properties
          cd android
          echo ALIAS_NAME='${{ secrets.ALIAS_NAME }}' >> local.properties
          echo ALIAS_PASSWORD='${{ secrets.ALIAS_PASSWORD }}' >> local.properties
          echo KEY_PASSWORD='${{ secrets.KEY_PASSWORD }}' >> local.properties
          echo KEY_PATH='./key.jks' >> local.properties
          # 从Secrets读取无换行符Base64解码, 然后保存到到app/key.jks
          echo ${{ secrets.KEY_STORE }} | base64 --decode > $GITHUB_WORKSPACE/android/app/key.jks

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'
      - run: flutter build apk --split-per-abi --release

      - name: Upload missing_rules.txt
        if: failure() && steps.gradle.outcome != 'success'
        uses: actions/upload-artifact@v4
        with:
          name: "missing_rules"
          path: "${{ github.workspace }}/build/app/outputs/mapping/release/missing_rules.txt"

      - name: Init APP Version Name
        run: |
          echo "ver_name=$(grep -m 1 'versionName' ${{ env.output }}/output-metadata.json | cut -d\" -f4)" >> $GITHUB_ENV

      - uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.ver_name }}
          tag_name: ${{ env.ver_name }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: false
          prerelease: false
          files: ${{ env.output }}/*.apk
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}

  ios:
    runs-on: macos-latest
    env:
      output: "${{ github.workspace }}/build/ios_export"
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Download OpenList Source Code
        run: |
          cd $GITHUB_WORKSPACE/openlist-lib/scripts
          chmod +x *.sh
          ./init_openlist.sh
          ./init_web.sh

      - uses: actions/setup-go@v5
        with:
          go-version: 1.22
          cache-dependency-path: ${{ github.workspace }}/openlist-lib/openlist/go.sum

      - name: Build OpenList for iOS
        run: |
          cd $GITHUB_WORKSPACE/openlist-lib/scripts
          chmod +x *.sh
          ./init_gomobile.sh
          # Note: iOS binding would need to be implemented separately
          # This is a placeholder for iOS-specific OpenList binding

      - uses: subosito/flutter-action@v2
        with:
          flutter-version: '3.19.6'

      - name: Install iOS dependencies
        run: |
          cd ios
          pod install

      - name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v2
        with:
          p12-file-base64: ${{ secrets.IOS_DIST_SIGNING_KEY }}
          p12-password: ${{ secrets.IOS_DIST_SIGNING_KEY_PASSWORD }}

      - name: Download Provisioning Profiles
        uses: Apple-Actions/download-provisioning-profiles@v1
        with:
          bundle-id: com.github.openlistteam.openlistFlutter
          profile-type: IOS_APP_STORE
          issuer-id: ${{ secrets.APPSTORE_ISSUER_ID }}
          api-key-id: ${{ secrets.APPSTORE_KEY_ID }}
          api-private-key: ${{ secrets.APPSTORE_PRIVATE_KEY }}

      - name: Build iOS Release
        run: flutter build ios --release

      - name: Archive iOS app
        run: |
          xcodebuild -workspace ios/Runner.xcworkspace \
                     -scheme Runner \
                     -configuration Release \
                     -destination generic/platform=iOS \
                     -archivePath build/Runner.xcarchive \
                     archive

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
                     -archivePath build/Runner.xcarchive \
                     -exportPath build/ios_export \
                     -exportOptionsPlist ios/ExportOptions-AppStore.plist

      - name: Get App Version
        run: |
          echo "ver_name=$(grep -A 1 'CFBundleShortVersionString' ios/Runner/Info.plist | tail -1 | sed 's/.*<string>\(.*\)<\/string>.*/\1/')" >> $GITHUB_ENV

      - name: Upload IPA to Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ env.ver_name }}
          tag_name: ${{ env.ver_name }}
          body_path: ${{ github.workspace }}/CHANGELOG.md
          draft: false
          prerelease: false
          files: ${{ env.output }}/*.ipa
        env:
          GITHUB_TOKEN: ${{ secrets.TOKEN }}